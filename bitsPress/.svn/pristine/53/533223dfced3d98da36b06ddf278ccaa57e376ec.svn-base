const getIndexFromArray = (arr, key, value) => {
  if (arr && arr.length > 0) {
    for (var i = 0; i < arr.length; i++) {
      var item = arr[i];
      if (item[key] === value) {
        return item;
      }
    }
  } else {
    return false;
  }
};

const getTreeDataItem = (data, key, value, resItem) => {
  if (data && data.length > 0) {
    for (var i = 0; i < data.length; i++) {
      var item = data[i];
      if (item[key] === value) {
        return item;
      } else {
        if (item.child && item.child.length > 0) {
          for (var j = 0; j < item.child.length; j++) {
            var citem = item.child[j];
            if (citem[key] === value) {
              return citem;
            }
          }
        }
      }
    }
  } else {
    return false;
  }
};

const isHave = (arr, key, value) => {
  if (arr && arr.length > 0) {
    var ret = false;
    for (let i = 0; i < arr.length; i++) {
      const item = arr[i];
      if (item[key] === value) {
        ret = true;
      }
    }
    return ret;
  } else {
    return false;
  }
};

// 时间格式化
var formatTime = function (timeStr, fmt) {
  timeStr = timeStr.replace("T", " ");
  timeStr = timeStr.replace("Z", "");
  if (!fmt) {
    fmt = 'yyyy-MM-dd hh:mm:ss';
  }
  if (isNaN(timeStr) && !isNaN(Date.parse(timeStr))) {
    return dateFtt(fmt, new Date(timeStr));
  } else {
    return "";
  }
};

function dateFtt(fmt, date) {
  var o = {
    "M+": date.getMonth() + 1, // 月份
    "d+": date.getDate(), // 日
    "h+": date.getHours(), // 小时
    "m+": date.getMinutes(), // 分
    "s+": date.getSeconds(), // 秒
    "w+": getWeekOfYear(date), // 第几周
    "q+": Math.floor((date.getMonth() + 3) / 3), // 季度
    "S": date.getMilliseconds() // 毫秒
  };
  if (/(y+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
  }
  for (var k in o) {
    if (new RegExp("(" + k + ")").test(fmt)) {
      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    }
  }
  return fmt;
};

function getWeekOfYear (date) {
  var firstDay = new Date(date.getFullYear(), 0, 1);
  var dayOfWeek = firstDay.getDay(); 
  var spendDay = 1;
  if (dayOfWeek != 0) {
    spendDay = 7 - dayOfWeek + 1;
  }
  firstDay = new Date(date.getFullYear(), 0, 1 + spendDay);
  var d = Math.ceil((date.valueOf() - firstDay.valueOf()) / 86400000);
  var result = Math.ceil(d / 7);
  return result+1;
};

export default {
  getIndexFromArray,
  getTreeDataItem,
  isHave,
  formatTime,
  dateFtt
};
